name: Deploy to DigitalOcean Droplet (Production)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Set environment variables
      run: |
        # CIABotOptions section
        echo "CIABOT_TOKEN=${{ secrets.CIABOT_TOKEN_PROD }}" >> .env
        echo "CIABOT_SETTINGS_PATH=${{ secrets.CIABOT_SETTINGS_PATH }}" >> .env
        echo "CIABOT_ADMIN_ID=${{ secrets.CIABOT_ADMIN_ID }}" >> .env
        echo "CIABOT_GUILD_ID=${{ secrets.CIABOT_GUILD_ID }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_HOST=db" >> .env
        echo "IS_PRODUCTION=true" >> .env
        echo "DEBUG_CHANNEL_ID=1288950494911402024" >> .env

        # PaperTrailLogging section
        echo "PAPERTRAIL_LOG_DESTINATION=${{ secrets.PAPERTRAIL_LOG_DESTINATION }}" >> .env
        echo "PAPERTRAIL_LOG_PORT=${{ secrets.PAPERTRAIL_LOG_PORT }}" >> .env

        # Additional environment variables for Docker Compose setup
        echo "CIABOT_CONTAINER_NAME=ciabot_public" >> .env
        echo "POSTGRES_CONTAINER_NAME=ciabot_postgres" >> .env
        echo "CIABOT_NETWORK_PORT=5432" >> .env
        echo "CIABOT_PORT=81" >> .env
        echo "DEPLOY_PATH=/root/ciabot-public" >> .env
        echo "CIABOT_NETWORK_NAME=ciabot_network" >> .env
        echo "COMPOSE_FILE=docker-compose.yml" >> .env

        # Set environment variables for GitHub Actions
        echo "DEPLOY_PATH=/root/ciabot-public" >> $GITHUB_ENV
        echo "CIABOT_NETWORK_NAME=ciabot_network" >> $GITHUB_ENV
        echo "COMPOSE_FILE=docker-compose.yml" >> $GITHUB_ENV

    - name: Replace appsettings.json
      run: |
        sed -i 's/__CIABOT_TOKEN__/${{ secrets.CIABOT_TOKEN_PROD }}/g' CIA.Net.Public.Bot/appsettings.json
        sed -i 's/__POSTGRES_PASSWORD__/${{ secrets.POSTGRES_PASSWORD_PROD }}/g' CIA.Net.Public.Bot/appsettings.json

    - name: Create Docker Network if not exists
      run: |
        if ! docker network ls --format '{{.Name}}' | grep -w "ciabot_network"; then
          echo "Creating network ciabot_network"
          docker network create ciabot_network
        else
          echo "Network ciabot_network already exists"
        fi

    - name: Build .NET project Docker image
      run: |
        docker compose -f docker-compose.yml build

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DO_SSH_KEY }}

    - name: Deploy to DigitalOcean Droplet
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} \
        "docker compose -f docker-compose.yml down || true"
        
        scp -o StrictHostKeyChecking=no -r * ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }}:/root/ciabot-public
        
        ssh -o StrictHostKeyChecking=no ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} \
        "cd /root/ciabot-public && docker compose up -d --build"
